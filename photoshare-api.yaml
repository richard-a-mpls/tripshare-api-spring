openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: http://localhost:8080/v1
paths:
  /projects:
    description: "published project related calls"
    get:
      tags:
        - "published_project"
      summary: "get published projects"
      operationId: "getProjects"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Project"

  /me/projects:
    description: "project related calls"
    post:
      tags:
        - "project"
      summary: "create a project"
      description: "create a project"
      operationId: "addProject"
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"

    get:
      tags:
        - "project"
      summary: "get a project based on authorized session"
      operationId: "getSessionProjects"
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Project"


  /me/projects/{project_id}:
    description: "project related calls"
    get:
      tags:
        - "project"
      summary: "get a project from project id"
      operationId: "getSessionProjectById"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "project_id"
          in: "path"
          description: "ID of project to return"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    patch:
      tags:
        - "project"
      summary: "update attributes of a project"
      operationId: "patchProject"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "project_id"
          in: "path"
          description: "ID of project to patch"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    delete:
      tags:
        - "project"
      summary: "delete a project by id"
      description: "delete that project"
      operationId: "deleteProject"
      security:
        - BearerAuth: [ ]
      parameters:
        - name: "project_id"
          in: "path"
          description: "ID of project to delete"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /wakeup:
    description: wake up the service
    get:
      tags:
        - "wakeup"
      summary: "wakeup the service"
      description: "this service needs to be woken up periodically to start running"
      operationId: "wakeup"
      responses:
        '200':
          description: OK


components:
  schemas:
    Project:
      type: object
      properties:
        _id:
          type: "string"
        profile_id:
          type: "string"
        summary:
          type: "string"
        description:
          type: "string"
        location:
          type: "string"
        published:
          type: "boolean"
        showcase_photo_id:
          type: "string"
        photo_array:
          type: array
          items:
            type: "string"
        datestmp:
          type: "string"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
security:
  - BearerAuth: []
